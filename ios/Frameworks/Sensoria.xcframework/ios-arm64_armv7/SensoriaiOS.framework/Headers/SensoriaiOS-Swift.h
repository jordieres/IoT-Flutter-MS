#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef SENSORIAIOS_SWIFT_H
#define SENSORIAIOS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import Foundation;
@import ObjectiveC;
#endif

#import <SensoriaiOS/SensoriaiOS.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SensoriaiOS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class NSNumber;
@class CBUUID;
@class CBPeripheral;
@class NSDate;
@protocol SADeviceBluetoothDelegate;
@class NSCoder;

SWIFT_CLASS("_TtC11SensoriaiOS8SADevice")
@interface SADevice : NSObject <NSCoding>
@property (nonatomic, copy) NSString * _Nullable deviceName;
@property (nonatomic, readonly) BOOL connected;
@property (nonatomic, readonly) BOOL streaming;
@property (nonatomic, readonly) BOOL temperatureStreaming;
@property (nonatomic, readonly, copy) NSString * _Nullable deviceCode;
@property (nonatomic, readonly) DeviceType deviceType;
@property (nonatomic, readonly) float deviceRSSI;
@property (nonatomic, readonly) NSTimeInterval timestamp;
@property (nonatomic, readonly) NSInteger samplingFrequency;
@property (nonatomic, readonly) BOOL scanUseServicesList;
@property (nonatomic, readonly, copy) NSArray<CBUUID *> * _Nonnull scanServicesList;
@property (nonatomic, readonly) BOOL scanOptionAllowDuplicatesKey;
@property (nonatomic, readonly, strong) CBPeripheral * _Nullable connectingPeripheral;
@property (nonatomic, readonly, strong) CBPeripheral * _Nullable connectedPeripheral;
@property (nonatomic, readonly) uint8_t battery;
@property (nonatomic, readonly) BOOL powerOn;
@property (nonatomic, readonly, copy) NSDate * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nonnull serialNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull firmwareRevision;
@property (nonatomic, readonly, copy) NSString * _Nullable garmentName;
@property (nonatomic, readonly, copy) NSString * _Nullable garmentModel;
@property (nonatomic, readonly, copy) NSString * _Nullable garmentSerialNumber;
@property (nonatomic, strong) id <SADeviceBluetoothDelegate> _Nullable delegate SWIFT_DEPRECATED_MSG("Use multiDelegate instead, unless calling from OBJC");
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceNamePrefix;
@property (nonatomic, readonly) SAData data;
/// Required by NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Required by NSCoding
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (void)connectWithAutoReconnect:(BOOL)autoReconnect immediateStreaming:(BOOL)immediateStreaming;
- (void)startReadRSSIWithTimeInterval:(NSTimeInterval)timeInterval;
- (void)stopReadRSSI;
- (void)resumeStreaming;
- (void)pauseStreaming;
- (void)disconnect;
- (void)startScan;
- (void)stopScan;
- (void)readBatteryLevel;
@end


SWIFT_CLASS("_TtC11SensoriaiOS6SACore")
@interface SACore : SADevice
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)disconnect;
- (void)resumeStreaming;
- (void)pauseStreaming;
@end

typedef SWIFT_ENUM(NSInteger, ChargingStatus, open) {
  ChargingStatusNotCharging = 0,
  ChargingStatusCharging = 1,
  ChargingStatusChargingComplete = 2,
  ChargingStatusUnknown = 3,
};

@class CBService;
@class CBCharacteristic;

@interface SACore (SWIFT_EXTENSION(SensoriaiOS))
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

@class NSData;

SWIFT_CLASS("_TtC11SensoriaiOS12SADataHelper")
@interface SADataHelper : NSObject
+ (NSData * _Nonnull)archiveWithSaData:(SAData)saData SWIFT_WARN_UNUSED_RESULT;
+ (SAData)unarchiveWithData:(NSData * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
+ (SAData)newSAData SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)valueOrEmptyWithValue:(NSNumber * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)fastStreamingProtocolRawValueWithFastStreamingProtocol:(FastStreamingProtocol)fastStreamingProtocol SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface SADevice (SWIFT_EXTENSION(SensoriaiOS)) <CBPeripheralDelegate>
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

@class CBCentralManager;

@interface SADevice (SWIFT_EXTENSION(SensoriaiOS)) <CBCentralManagerDelegate>
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didReadRSSI:(NSNumber * _Nonnull)RSSI error:(NSError * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP11SensoriaiOS25SADeviceBluetoothDelegate_")
@protocol SADeviceBluetoothDelegate
@optional
- (void)didConnect;
- (void)didConnect:(SADevice * _Nonnull)device;
- (void)didConnect:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didControlPointReady;
- (void)didControlPointReady:(SADevice * _Nonnull)device;
- (void)didControlPointReady:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didDeviceReady;
- (void)didDeviceReady:(SADevice * _Nonnull)device;
- (void)didDeviceReady:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didStartStreaming;
- (void)didStartStreaming:(SADevice * _Nonnull)device;
- (void)didStartStreaming:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didPauseStreaming;
- (void)didPauseStreaming:(SADevice * _Nonnull)device;
- (void)didPauseStreaming:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didStartTemperatureStreaming;
- (void)didStartTemperatureStreaming:(SADevice * _Nonnull)device;
- (void)didStartTemperatureStreaming:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didPauseTemperatureStreaming;
- (void)didPauseTemperatureStreaming:(SADevice * _Nonnull)device;
- (void)didPauseTemperatureStreaming:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didDisconnect:(NSString * _Nonnull)message;
- (void)didDisconnect:(NSString * _Nonnull)message device:(SADevice * _Nonnull)device;
- (void)didDisconnect:(NSString * _Nonnull)message device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nullable)peripheral;
- (void)didSignalLost:(NSString * _Nonnull)message;
- (void)didSignalLost:(NSString * _Nonnull)message device:(SADevice * _Nonnull)device;
- (void)didSignalLost:(NSString * _Nonnull)message device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didPowerOn;
- (void)didError:(NSString * _Nonnull)message;
- (void)didUpdateData;
- (void)didUpdateData:(SAData)data;
- (void)didUpdateData:(SAData)data device:(SADevice * _Nonnull)device;
- (void)didUpdateData:(SAData)data device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didUpdateData:(SAData)data device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic;
- (void)didScan:(NSString * _Nonnull)deviceName;
- (void)didScan:(NSString * _Nonnull)deviceName peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didScan:(NSString * _Nonnull)deviceName peripheral:(CBPeripheral * _Nonnull)peripheral device:(SADevice * _Nonnull)device;
- (void)didUpdateTemperature;
- (void)didUpdateTemperature:(float)data;
- (void)didUpdateTemperature:(float)data device:(SADevice * _Nonnull)device;
- (void)didUpdateTemperature:(float)data device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didUpdateTemperature:(float)data device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic;
- (void)didBatteryRead:(uint8_t)batteryValue;
- (void)didBatteryRead:(uint8_t)batteryValue device:(SADevice * _Nonnull)device;
- (void)didBatteryRead:(uint8_t)batteryValue device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didReadRSSI:(NSNumber * _Nonnull)rssi;
- (void)didReadRSSI:(NSNumber * _Nonnull)rssi device:(SADevice * _Nonnull)device;
- (void)didReadRSSI:(NSNumber * _Nonnull)rssi device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
@end


SWIFT_CLASS("_TtC11SensoriaiOS14SAHeartMonitor")
@interface SAHeartMonitor : SADevice
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface SAHeartMonitor (SWIFT_EXTENSION(SensoriaiOS))
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef SENSORIAIOS_SWIFT_H
#define SENSORIAIOS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import Foundation;
@import ObjectiveC;
#endif

#import <SensoriaiOS/SensoriaiOS.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SensoriaiOS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class NSNumber;
@class CBUUID;
@class CBPeripheral;
@class NSDate;
@protocol SADeviceBluetoothDelegate;
@class NSCoder;

SWIFT_CLASS("_TtC11SensoriaiOS8SADevice")
@interface SADevice : NSObject <NSCoding>
@property (nonatomic, copy) NSString * _Nullable deviceName;
@property (nonatomic, readonly) BOOL connected;
@property (nonatomic, readonly) BOOL streaming;
@property (nonatomic, readonly) BOOL temperatureStreaming;
@property (nonatomic, readonly, copy) NSString * _Nullable deviceCode;
@property (nonatomic, readonly) DeviceType deviceType;
@property (nonatomic, readonly) float deviceRSSI;
@property (nonatomic, readonly) NSTimeInterval timestamp;
@property (nonatomic, readonly) NSInteger samplingFrequency;
@property (nonatomic, readonly) BOOL scanUseServicesList;
@property (nonatomic, readonly, copy) NSArray<CBUUID *> * _Nonnull scanServicesList;
@property (nonatomic, readonly) BOOL scanOptionAllowDuplicatesKey;
@property (nonatomic, readonly, strong) CBPeripheral * _Nullable connectingPeripheral;
@property (nonatomic, readonly, strong) CBPeripheral * _Nullable connectedPeripheral;
@property (nonatomic, readonly) uint8_t battery;
@property (nonatomic, readonly) BOOL powerOn;
@property (nonatomic, readonly, copy) NSDate * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nonnull serialNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull firmwareRevision;
@property (nonatomic, readonly, copy) NSString * _Nullable garmentName;
@property (nonatomic, readonly, copy) NSString * _Nullable garmentModel;
@property (nonatomic, readonly, copy) NSString * _Nullable garmentSerialNumber;
@property (nonatomic, strong) id <SADeviceBluetoothDelegate> _Nullable delegate SWIFT_DEPRECATED_MSG("Use multiDelegate instead, unless calling from OBJC");
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceNamePrefix;
@property (nonatomic, readonly) SAData data;
/// Required by NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Required by NSCoding
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (void)connectWithAutoReconnect:(BOOL)autoReconnect immediateStreaming:(BOOL)immediateStreaming;
- (void)startReadRSSIWithTimeInterval:(NSTimeInterval)timeInterval;
- (void)stopReadRSSI;
- (void)resumeStreaming;
- (void)pauseStreaming;
- (void)disconnect;
- (void)startScan;
- (void)stopScan;
- (void)readBatteryLevel;
@end


SWIFT_CLASS("_TtC11SensoriaiOS6SACore")
@interface SACore : SADevice
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)disconnect;
- (void)resumeStreaming;
- (void)pauseStreaming;
@end

typedef SWIFT_ENUM(NSInteger, ChargingStatus, open) {
  ChargingStatusNotCharging = 0,
  ChargingStatusCharging = 1,
  ChargingStatusChargingComplete = 2,
  ChargingStatusUnknown = 3,
};

@class CBService;
@class CBCharacteristic;

@interface SACore (SWIFT_EXTENSION(SensoriaiOS))
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

@class NSData;

SWIFT_CLASS("_TtC11SensoriaiOS12SADataHelper")
@interface SADataHelper : NSObject
+ (NSData * _Nonnull)archiveWithSaData:(SAData)saData SWIFT_WARN_UNUSED_RESULT;
+ (SAData)unarchiveWithData:(NSData * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
+ (SAData)newSAData SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)valueOrEmptyWithValue:(NSNumber * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)fastStreamingProtocolRawValueWithFastStreamingProtocol:(FastStreamingProtocol)fastStreamingProtocol SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface SADevice (SWIFT_EXTENSION(SensoriaiOS)) <CBPeripheralDelegate>
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

@class CBCentralManager;

@interface SADevice (SWIFT_EXTENSION(SensoriaiOS)) <CBCentralManagerDelegate>
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didReadRSSI:(NSNumber * _Nonnull)RSSI error:(NSError * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP11SensoriaiOS25SADeviceBluetoothDelegate_")
@protocol SADeviceBluetoothDelegate
@optional
- (void)didConnect;
- (void)didConnect:(SADevice * _Nonnull)device;
- (void)didConnect:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didControlPointReady;
- (void)didControlPointReady:(SADevice * _Nonnull)device;
- (void)didControlPointReady:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didDeviceReady;
- (void)didDeviceReady:(SADevice * _Nonnull)device;
- (void)didDeviceReady:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didStartStreaming;
- (void)didStartStreaming:(SADevice * _Nonnull)device;
- (void)didStartStreaming:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didPauseStreaming;
- (void)didPauseStreaming:(SADevice * _Nonnull)device;
- (void)didPauseStreaming:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didStartTemperatureStreaming;
- (void)didStartTemperatureStreaming:(SADevice * _Nonnull)device;
- (void)didStartTemperatureStreaming:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didPauseTemperatureStreaming;
- (void)didPauseTemperatureStreaming:(SADevice * _Nonnull)device;
- (void)didPauseTemperatureStreaming:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didDisconnect:(NSString * _Nonnull)message;
- (void)didDisconnect:(NSString * _Nonnull)message device:(SADevice * _Nonnull)device;
- (void)didDisconnect:(NSString * _Nonnull)message device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nullable)peripheral;
- (void)didSignalLost:(NSString * _Nonnull)message;
- (void)didSignalLost:(NSString * _Nonnull)message device:(SADevice * _Nonnull)device;
- (void)didSignalLost:(NSString * _Nonnull)message device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didPowerOn;
- (void)didError:(NSString * _Nonnull)message;
- (void)didUpdateData;
- (void)didUpdateData:(SAData)data;
- (void)didUpdateData:(SAData)data device:(SADevice * _Nonnull)device;
- (void)didUpdateData:(SAData)data device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didUpdateData:(SAData)data device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic;
- (void)didScan:(NSString * _Nonnull)deviceName;
- (void)didScan:(NSString * _Nonnull)deviceName peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didScan:(NSString * _Nonnull)deviceName peripheral:(CBPeripheral * _Nonnull)peripheral device:(SADevice * _Nonnull)device;
- (void)didUpdateTemperature;
- (void)didUpdateTemperature:(float)data;
- (void)didUpdateTemperature:(float)data device:(SADevice * _Nonnull)device;
- (void)didUpdateTemperature:(float)data device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didUpdateTemperature:(float)data device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic;
- (void)didBatteryRead:(uint8_t)batteryValue;
- (void)didBatteryRead:(uint8_t)batteryValue device:(SADevice * _Nonnull)device;
- (void)didBatteryRead:(uint8_t)batteryValue device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)didReadRSSI:(NSNumber * _Nonnull)rssi;
- (void)didReadRSSI:(NSNumber * _Nonnull)rssi device:(SADevice * _Nonnull)device;
- (void)didReadRSSI:(NSNumber * _Nonnull)rssi device:(SADevice * _Nonnull)device peripheral:(CBPeripheral * _Nonnull)peripheral;
@end


SWIFT_CLASS("_TtC11SensoriaiOS14SAHeartMonitor")
@interface SAHeartMonitor : SADevice
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface SAHeartMonitor (SWIFT_EXTENSION(SensoriaiOS))
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
